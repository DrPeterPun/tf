2022-04-29 04:40:27,142{GMT}	INFO	[jepsen test runner] jepsen.core: Test version 0d4ff421833ec2c381c8673966f9f458bcc47975 (plus uncommitted changes)
2022-04-29 04:40:27,143{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test --workload lin-kv --bin raft.py --time-limit 2
2022-04-29 04:40:27,191{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:remote #jepsen.control.SSHRemote{:session nil}
 :log-net-send false
 :node-count nil
 :max-txn-length 4
 :concurrency 5
 :db
 #object[maelstrom.db$db$reify__16747
         "0x5ae06c93"
         "maelstrom.db$db$reify__16747@5ae06c93"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "lin-kv"
 :logging-json? false
 :net-journal #object[clojure.lang.Atom "0x2227c82d" {:status :ready, :val []}]
 :start-time
 #object[org.joda.time.DateTime "0x1b9075c9" "2022-04-29T04:40:27.000+01:00"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_adapter$reify__15560
         "0x11a88d87"
         "maelstrom.net$jepsen_adapter$reify__15560@11a88d87"]
 :client
 #object[maelstrom.workload.lin_kv$client$reify__17524
         "0xce24a98"
         "maelstrom.workload.lin_kv$client$reify__17524@ce24a98"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0x496101d1"
         "java.util.concurrent.CyclicBarrier@496101d1"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 5
 :checker
 #object[jepsen.checker$compose$reify__8612
         "0x19858f26"
         "jepsen.checker$compose$reify__8612@19858f26"]
 :argv ("test" "--workload" "lin-kv" "--bin" "raft.py" "--time-limit" "2")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__17019@4c14ed24"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__17000@523cc8b4"]})
 :active-histories
 #object[clojure.lang.Atom "0x139224ab" {:status :ready, :val #{}}]
 :nodes ["n1" "n2" "n3" "n4" "n5"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "raft.py"
 :generator
 (jepsen.generator.TimeLimit
  {:limit 2000000000,
   :cutoff nil,
   :gen (jepsen.generator.Any
         {:gens [(jepsen.generator.OnThreads {:f #{:nemesis}, :gen nil})
                 (jepsen.generator.OnThreads
                  {:f #object[clojure.core$complement$fn__5654
                              "0x53bf791"
                              "clojure.core$complement$fn__5654@53bf791"],
                   :gen (jepsen.generator.Stagger
                         {:dt 400000000,
                          :next-time nil,
                          :gen (jepsen.generator.OnThreads
                                {:f #object[clojure.core$complement$fn__5654
                                            "0x1bc6a43c"
                                            "clojure.core$complement$fn__5654@1bc6a43c"],
                                 :gen (jepsen.independent.ConcurrentGenerator
                                       {:n 10,
                                        :fgen #object[jepsen.tests.linearizable_register$test$fn__17324
                                                      "0x5f3fa154"
                                                      "jepsen.tests.linearizable_register$test$fn__17324@5f3fa154"],
                                        :group->threads nil,
                                        :thread->group nil,
                                        :keys (0 1 2 3 4 5 6 7 ...),
                                        :gens nil})})})})]})})
 :log-net-recv false
 :os
 #object[jepsen.os$reify__2490 "0x3bced0d2" "jepsen.os$reify__2490@3bced0d2"]
 :time-limit 2
 :workload :lin-kv
 :consistency-models [:strict-serializable]
 :topology :grid}

2022-04-29 04:40:27,200{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2022-04-29 04:40:27,203{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2022-04-29 04:40:27,207{GMT}	INFO	[jepsen node n3] maelstrom.db: Setting up n3
2022-04-29 04:40:27,208{GMT}	INFO	[jepsen node n5] maelstrom.db: Setting up n5
2022-04-29 04:40:27,208{GMT}	INFO	[jepsen node n4] maelstrom.db: Setting up n4
2022-04-29 04:40:27,211{GMT}	INFO	[jepsen node n5] maelstrom.process: launching raft.py nil
2022-04-29 04:40:27,212{GMT}	INFO	[jepsen node n4] maelstrom.process: launching raft.py nil
2022-04-29 04:40:27,212{GMT}	INFO	[jepsen node n1] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2022-04-29 04:40:27,207{GMT}	INFO	[jepsen node n2] maelstrom.db: Setting up n2
2022-04-29 04:40:27,211{GMT}	INFO	[jepsen node n3] maelstrom.process: launching raft.py nil
2022-04-29 04:40:27,217{GMT}	INFO	[jepsen node n1] maelstrom.db: Setting up n1
2022-04-29 04:40:27,217{GMT}	INFO	[jepsen node n2] maelstrom.process: launching raft.py nil
2022-04-29 04:40:27,218{GMT}	INFO	[jepsen node n1] maelstrom.process: launching raft.py nil
2022-04-29 04:40:27,288{GMT}	INFO	[jepsen test runner] jepsen.core: Relative time begins now
2022-04-29 04:40:27,609{GMT}	INFO	[jepsen node n1] maelstrom.db: Tearing down n1
2022-04-29 04:40:27,611{GMT}	INFO	[jepsen node n2] maelstrom.db: Tearing down n2
2022-04-29 04:40:27,611{GMT}	INFO	[jepsen node n3] maelstrom.db: Tearing down n3
2022-04-29 04:40:27,611{GMT}	INFO	[jepsen node n4] maelstrom.db: Tearing down n4
2022-04-29 04:40:27,612{GMT}	INFO	[jepsen node n5] maelstrom.db: Tearing down n5
2022-04-29 04:40:28,245{GMT}	WARN	[main] jepsen.core: Test crashed!
clojure.lang.ExceptionInfo: Node n5 crashed with exit status 1. Before crashing, it wrote to STDOUT:

{"dest": "c0", "src": "n5", "body": {"msg_id": 1, "in_reply_to": 1, "type": "init_ok"}}

And to STDERR:

DEBUG:root:received {"dest":"n5","body":{"type":"init","node_id":"n5","node_ids":["n1","n2","n3","n4","n5"],"msg_id":1},"src":"c0","id":0}
INFO:root:node n5 initialized
DEBUG:root:sending {"dest": "c0", "src": "n5", "body": {"msg_id": 1, "in_reply_to": 1, "type": "init_ok"}}
ERROR:root:fatal exception in handler
Traceback (most recent call last):
  File "/home/peter/Documents/tf/lab3/ms.py", line 27, in exitOnError
    fn(*args)
  File "/home/peter/Documents/tf/lab3/raft.py", line 184, in handle
    leader_alive_checker()
  File "/home/peter/Documents/tf/lab3/raft.py", line 113, in leader_alive_checker
    start_vote()
  File "/home/peter/Documents/tf/lab3/raft.py", line 130, in start_vote
    current_term += 1
UnboundLocalError: local variable 'current_term' referenced before assignment

Full STDERR logs are available in /home/peter/Documents/tf/lab3/store/lin-kv/20220429T044027.000+0100/node-logs/n5.log
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.process$stop_node_BANG_.invokeStatic(process.clj:239)
	at maelstrom.process$stop_node_BANG_.invoke(process.clj:217)
	at maelstrom.db$db$reify__16747.teardown_BANG_(db.clj:75)
	at jepsen.db$fn__3285$G__3281__3289.invoke(db.clj:11)
	at jepsen.db$fn__3285$G__3280__3294.invoke(db.clj:11)
	at clojure.core$partial$fn__5824.invoke(core.clj:2625)
	at jepsen.control$on_nodes$fn__3165.invoke(control.clj:452)
	at clojure.lang.AFn.applyToHelper(AFn.java:154)
	at clojure.lang.AFn.applyTo(AFn.java:144)
	at clojure.core$apply.invokeStatic(core.clj:665)
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973)
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invokeStatic(core.clj:669)
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at dom_top.core$real_pmap_helper$build_thread__213$fn__214.invoke(core.clj:146)
	at clojure.lang.AFn.applyToHelper(AFn.java:152)
	at clojure.lang.AFn.applyTo(AFn.java:144)
	at clojure.core$apply.invokeStatic(core.clj:665)
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973)
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973)
	at clojure.lang.RestFn.invoke(RestFn.java:425)
	at clojure.lang.AFn.applyToHelper(AFn.java:156)
	at clojure.lang.RestFn.applyTo(RestFn.java:132)
	at clojure.core$apply.invokeStatic(core.clj:669)
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003)
	at clojure.lang.RestFn.invoke(RestFn.java:397)
	at clojure.lang.AFn.run(AFn.java:22)
	at java.base/java.lang.Thread.run(Thread.java:829)
