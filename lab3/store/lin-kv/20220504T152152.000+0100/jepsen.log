2022-05-04 15:21:52,972{GMT}	INFO	[jepsen test runner] jepsen.core: Test version 99e6fb2a3505fae4b1987d97b445a48b7ad1f664 (plus uncommitted changes)
2022-05-04 15:21:52,974{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test --bin raft.py --workload lin-kv --time-limit 2 --concurrency 4n
2022-05-04 15:21:53,216{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:remote #jepsen.control.SSHRemote{:session nil}
 :log-net-send false
 :node-count nil
 :max-txn-length 4
 :concurrency 20
 :db
 #object[maelstrom.db$db$reify__16747
         "0xcf0e8b4"
         "maelstrom.db$db$reify__16747@cf0e8b4"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "lin-kv"
 :logging-json? false
 :net-journal #object[clojure.lang.Atom "0x51a7ee4e" {:status :ready, :val []}]
 :start-time
 #object[org.joda.time.DateTime "0x424c8ebe" "2022-05-04T15:21:52.000+01:00"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_adapter$reify__15560
         "0x7aafac17"
         "maelstrom.net$jepsen_adapter$reify__15560@7aafac17"]
 :client
 #object[maelstrom.workload.lin_kv$client$reify__17524
         "0x3054551f"
         "maelstrom.workload.lin_kv$client$reify__17524@3054551f"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0x6b8cfbeb"
         "java.util.concurrent.CyclicBarrier@6b8cfbeb"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 5
 :checker
 #object[jepsen.checker$compose$reify__8612
         "0x4603845b"
         "jepsen.checker$compose$reify__8612@4603845b"]
 :argv
 ("test"
  "--bin"
  "raft.py"
  "--workload"
  "lin-kv"
  "--time-limit"
  "2"
  "--concurrency"
  "4n")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__17019@414b5798"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__17000@53251e03"]})
 :active-histories
 #object[clojure.lang.Atom "0x5ffae42f" {:status :ready, :val #{}}]
 :nodes ["n1" "n2" "n3" "n4" "n5"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "raft.py"
 :generator
 (jepsen.generator.TimeLimit
  {:limit 2000000000,
   :cutoff nil,
   :gen (jepsen.generator.Any
         {:gens [(jepsen.generator.OnThreads {:f #{:nemesis}, :gen nil})
                 (jepsen.generator.OnThreads
                  {:f #object[clojure.core$complement$fn__5654
                              "0x3eff5c32"
                              "clojure.core$complement$fn__5654@3eff5c32"],
                   :gen (jepsen.generator.Stagger
                         {:dt 400000000,
                          :next-time nil,
                          :gen (jepsen.generator.OnThreads
                                {:f #object[clojure.core$complement$fn__5654
                                            "0x79d538c1"
                                            "clojure.core$complement$fn__5654@79d538c1"],
                                 :gen (jepsen.independent.ConcurrentGenerator
                                       {:n 10,
                                        :fgen #object[jepsen.tests.linearizable_register$test$fn__17324
                                                      "0x31e08c61"
                                                      "jepsen.tests.linearizable_register$test$fn__17324@31e08c61"],
                                        :group->threads nil,
                                        :thread->group nil,
                                        :keys (0 1 2 3 4 5 6 7 ...),
                                        :gens nil})})})})]})})
 :log-net-recv false
 :os
 #object[jepsen.os$reify__2490 "0x2db15764" "jepsen.os$reify__2490@2db15764"]
 :time-limit 2
 :workload :lin-kv
 :consistency-models [:strict-serializable]
 :topology :grid}

2022-05-04 15:21:53,238{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2022-05-04 15:21:53,244{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2022-05-04 15:21:53,248{GMT}	INFO	[jepsen node n4] maelstrom.db: Setting up n4
2022-05-04 15:21:53,248{GMT}	INFO	[jepsen node n3] maelstrom.db: Setting up n3
2022-05-04 15:21:53,250{GMT}	INFO	[jepsen node n2] maelstrom.db: Setting up n2
2022-05-04 15:21:53,250{GMT}	INFO	[jepsen node n3] maelstrom.process: launching raft.py nil
2022-05-04 15:21:53,250{GMT}	INFO	[jepsen node n4] maelstrom.process: launching raft.py nil
2022-05-04 15:21:53,252{GMT}	INFO	[jepsen node n2] maelstrom.process: launching raft.py nil
2022-05-04 15:21:53,257{GMT}	INFO	[jepsen node n5] maelstrom.db: Setting up n5
2022-05-04 15:21:53,259{GMT}	INFO	[jepsen node n5] maelstrom.process: launching raft.py nil
2022-05-04 15:21:53,262{GMT}	INFO	[jepsen node n1] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2022-05-04 15:21:53,382{GMT}	INFO	[jepsen node n1] maelstrom.db: Setting up n1
2022-05-04 15:21:53,384{GMT}	INFO	[jepsen node n1] maelstrom.process: launching raft.py nil
2022-05-04 15:21:53,573{GMT}	INFO	[jepsen test runner] jepsen.core: Relative time begins now
2022-05-04 15:21:53,670{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:invoke	:cas	[0 [2 1]]
2022-05-04 15:21:53,761{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:read	[0 nil]
2022-05-04 15:21:53,795{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:fail	:read	[0 nil]	[:unknown "Not Leader"]
2022-05-04 15:21:54,149{GMT}	INFO	[jepsen worker 12] jepsen.util: 12	:invoke	:cas	[1 [1 4]]
2022-05-04 15:21:54,155{GMT}	INFO	[jepsen worker 12] jepsen.util: 12	:info	:cas	[1 [1 4]]	[:unknown "Not Leader"]
2022-05-04 15:21:54,261{GMT}	INFO	[jepsen worker 12] jepsen.util: 32	:invoke	:write	[1 0]
2022-05-04 15:21:54,420{GMT}	INFO	[jepsen worker 17] jepsen.util: 17	:invoke	:cas	[1 [1 1]]
2022-05-04 15:21:54,674{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:info	:cas	[0 [2 1]]	:net-timeout
2022-05-04 15:21:54,763{GMT}	INFO	[jepsen worker 6] jepsen.util: 6	:invoke	:write	[0 1]
2022-05-04 15:21:54,769{GMT}	INFO	[jepsen worker 6] jepsen.util: 6	:info	:write	[0 1]	[:unknown "Not Leader"]
2022-05-04 15:21:55,158{GMT}	INFO	[jepsen worker 14] jepsen.util: 14	:invoke	:cas	[1 [0 0]]
2022-05-04 15:21:55,160{GMT}	INFO	[jepsen worker 10] jepsen.util: 10	:invoke	:cas	[1 [3 0]]
2022-05-04 15:21:55,167{GMT}	INFO	[jepsen worker 10] jepsen.util: 10	:info	:cas	[1 [3 0]]	[:unknown "Not Leader"]
2022-05-04 15:21:55,228{GMT}	INFO	[jepsen worker 5] jepsen.util: 25	:invoke	:write	[0 0]
2022-05-04 15:21:55,233{GMT}	INFO	[jepsen worker 5] jepsen.util: 25	:info	:write	[0 0]	[:unknown "Not Leader"]
2022-05-04 15:21:55,266{GMT}	INFO	[jepsen worker 12] jepsen.util: 32	:info	:write	[1 0]	:net-timeout
2022-05-04 15:21:55,422{GMT}	INFO	[jepsen worker 17] jepsen.util: 17	:info	:cas	[1 [1 1]]	:net-timeout
2022-05-04 15:21:55,619{GMT}	INFO	[jepsen worker 5] jepsen.util: 45	:invoke	:cas	[0 [0 2]]
2022-05-04 15:21:55,625{GMT}	INFO	[jepsen worker 5] jepsen.util: 45	:info	:cas	[0 [0 2]]	[:unknown "Not Leader"]
2022-05-04 15:21:56,163{GMT}	INFO	[jepsen worker 14] jepsen.util: 14	:info	:cas	[1 [0 0]]	:net-timeout
2022-05-04 15:21:56,183{GMT}	INFO	[jepsen node n1] maelstrom.db: Tearing down n1
2022-05-04 15:21:56,185{GMT}	INFO	[jepsen node n5] maelstrom.db: Tearing down n5
2022-05-04 15:21:56,184{GMT}	INFO	[jepsen node n3] maelstrom.db: Tearing down n3
2022-05-04 15:21:56,183{GMT}	INFO	[jepsen node n2] maelstrom.db: Tearing down n2
2022-05-04 15:21:56,184{GMT}	INFO	[jepsen node n4] maelstrom.db: Tearing down n4
2022-05-04 15:21:57,150{GMT}	WARN	[main] jepsen.core: Test crashed!
clojure.lang.ExceptionInfo: Node n4 crashed with exit status 1. Before crashing, it wrote to STDOUT:

{"dest": "n5", "src": "n4", "body": {"msg_id": 98, "in_reply_to": 160, "type": "RequestVoteRes", "term": 17, "res": false}}
{"dest": "n1", "src": "n4", "body": {"msg_id": 99, "type": "RequestVote", "term": 18, "prevLogIndex": 2, "lastLogTerm": 7, "candidateId": "n4"}}
{"dest": "n2", "src": "n4", "body": {"msg_id": 100, "type": "RequestVote", "term": 18, "prevLogIndex": 2, "lastLogTerm": 7, "candidateId": "n4"}}
{"dest": "n3", "src": "n4", "body": {"msg_id": 101, "type": "RequestVote", "term": 18, "prevLogIndex": 2, "lastLogTerm": 7, "candidateId": "n4"}}
{"dest": "n4", "src": "n4", "body": {"msg_id": 102, "type": "RequestVote", "term": 18, "prevLogIndex": 2, "lastLogTerm": 7, "candidateId": "n4"}}
{"dest": "n5", "src": "n4", "body": {"msg_id": 103, "type": "RequestVote", "term": 18, "prevLogIndex": 2, "lastLogTerm": 7, "candidateId": "n4"}}
{"dest": "n2", "src": "n4", "body": {"msg_id": 104, "in_reply_to": 121, "type": "AppendEntriesRes", "res": false, "term": 18}}
{"dest": "n5", "src": "n4", "body": {"msg_id": 105, "in_reply_to": 168, "type": "AppendEntriesRes", "res": false, "term": 18}}
{"dest": "n4", "src": "n4", "body": {"msg_id": 106, "in_reply_to": 102, "type": "RequestVoteRes", "term": 18, "res": true}}
{"dest": "n2", "src": "n4", "body": {"msg_id": 107, "in_reply_to": 129, "type": "RequestVoteRes", "term": 18, "res": false}}
{"dest": "n1", "src": "n4", "body": {"msg_id": 108, "type": "RequestVote", "term": 19, "prevLogIndex": 2, "lastLogTerm": 7, "candidateId": "n4"}}
{"dest": "n2", "src": "n4", "body": {"msg_id": 109, "type": "RequestVote", "term": 19, "prevLogIndex": 2, "lastLogTerm": 7, "candidateId": "n4"}}
{"dest": "n3", "src": "n4", "body": {"msg_id": 110, "type": "RequestVote", "term": 19, "prevLogIndex": 2, "lastLogTerm": 7, "candidateId": "n4"}}
{"dest": "n4", "src": "n4", "body": {"msg_id": 111, "type": "RequestVote", "term": 19, "prevLogIndex": 2, "lastLogTerm": 7, "candidateId": "n4"}}
{"dest": "n5", "src": "n4", "body": {"msg_id": 112, "type": "RequestVote", "term": 19, "prevLogIndex": 2, "lastLogTerm": 7, "candidateId": "n4"}}
{"dest": "n1", "src": "n4", "body": {"msg_id": 113, "type": "RequestVote", "term": 20, "prevLogIndex": 2, "lastLogTerm": 7, "candidateId": "n4"}}
{"dest": "n2", "src": "n4", "body": {"msg_id": 114, "type": "RequestVote", "term": 20, "prevLogIndex": 2, "lastLogTerm": 7, "candidateId": "n4"}}
{"dest": "n3", "src": "n4", "body": {"msg_id": 115, "type": "RequestVote", "term": 20, "prevLogIndex": 2, "lastLogTerm": 7, "candidateId": "n4"}}
{"dest": "n4", "src": "n4", "body": {"msg_id": 116, "type": "RequestVote", "term": 20, "prevLogIndex": 2, "lastLogTerm": 7, "candidateId": "n4"}}
{"dest": "n5", "src": "n4", "body": {"msg_id": 117, "type": "RequestVote", "term": 20, "prevLogIndex": 2, "lastLogTerm": 7, "candidateId": "n4"}}
{"dest": "n5", "src": "n4", "body": {"msg_id": 118, "in_reply_to": 176, "type": "RequestVoteRes", "term": 20, "res": false}}
{"dest": "n5", "src": "n4", "body": {"msg_id": 119, "in_reply_to": 178, "type": "AppendEntriesRes", "res": false, "term": 20}}
{"dest": "n5", "src": "n4", "body": {"msg_id": 120, "in_reply_to": 183, "type": "RequestVoteRes", "term": 20, "res": false}}
{"dest": "n4", "src": "n4", "body": {"msg_id": 121, "in_reply_to": 111, "type": "RequestVoteRes", "term": 20, "res": false}}
{"dest": "n4", "src": "n4", "body": {"msg_id": 122, "in_reply_to": 116, "type": "RequestVoteRes", "term": 20, "res": true}}
{"dest": "n2", "src": "n4", "body": {"msg_id": 123, "in_reply_to": 139, "type": "RequestVoteRes", "term": 20, "res": false}}
{"dest": "n2", "src": "n4", "body": {"msg_id": 124, "in_reply_to": 144, "type": "RequestVoteRes", "term": 20, "res": false}}
{"dest": "n2", "src": "n4", "body": {"msg_id": 125, "in_reply_to": 149, "type": "RequestVoteRes", "term": 20, "res": false}}
{"dest": "n2", "src": "n4", "body": {"msg_id": 126, "in_reply_to": 154, "type": "RequestVoteRes", "term": 20, "res": false}}
{"dest": "n5", "src": "n4", "body": {"msg_id": 127, "in_reply_to": 192, "type": "RequestVoteRes", "term": 20, "res": false}}
{"dest": "n5", "src": "n4", "body": {"msg_id": 128, "in_reply_to": 198, "type": "AppendEntriesRes", "res": true, "term": 20, "next": 3, "commit": 0}}
{"dest": "n5", "src": "n4", "body": {"msg_id": 129, "in_reply_to": 207, "type": "AppendEntriesRes", "res": true, "term": 21, "next": 3, "commit": 0}}

And to STDERR:


INFO:root:355
[(('pass', None), 0), [['pass', None], 0], [['write', [1, 0]], 7]]
[[['pass', None], 0], [['write', [1, 0]], 7], [['pass', None], 0], [['write', [1, 0]], 7]]
0
0
n4
1

INFO:root:355
[(('pass', None), 0), [['pass', None], 0], [['write', [1, 0]], 7]]
[[['pass', None], 0], [['write', [1, 0]], 7], [['pass', None], 0], [['write', [1, 0]], 7]]
0
0
n4
2

INFO:root:355
[(('pass', None), 0), [['pass', None], 0], [['write', [1, 0]], 7]]
[[['pass', None], 0], [['write', [1, 0]], 7], [['pass', None], 0], [['write', [1, 0]], 7]]
0
0
n4
3

ERROR:root:fatal exception in handler
Traceback (most recent call last):
  File "/home/peter/Documents/tf/lab3/ms.py", line 27, in exitOnError
    fn(*args)
  File "/home/peter/Documents/tf/lab3/raft.py", line 358, in handle
    entry=log[msg.body.prevIndex+i]
IndexError: list index out of range

Full STDERR logs are available in /home/peter/Documents/tf/lab3/store/lin-kv/20220504T152152.000+0100/node-logs/n4.log
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.process$stop_node_BANG_.invokeStatic(process.clj:239)
	at maelstrom.process$stop_node_BANG_.invoke(process.clj:217)
	at maelstrom.db$db$reify__16747.teardown_BANG_(db.clj:75)
	at jepsen.db$fn__3285$G__3281__3289.invoke(db.clj:11)
	at jepsen.db$fn__3285$G__3280__3294.invoke(db.clj:11)
	at clojure.core$partial$fn__5824.invoke(core.clj:2625)
	at jepsen.control$on_nodes$fn__3165.invoke(control.clj:452)
	at clojure.lang.AFn.applyToHelper(AFn.java:154)
	at clojure.lang.AFn.applyTo(AFn.java:144)
	at clojure.core$apply.invokeStatic(core.clj:665)
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973)
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invokeStatic(core.clj:669)
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at dom_top.core$real_pmap_helper$build_thread__213$fn__214.invoke(core.clj:146)
	at clojure.lang.AFn.applyToHelper(AFn.java:152)
	at clojure.lang.AFn.applyTo(AFn.java:144)
	at clojure.core$apply.invokeStatic(core.clj:665)
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973)
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973)
	at clojure.lang.RestFn.invoke(RestFn.java:425)
	at clojure.lang.AFn.applyToHelper(AFn.java:156)
	at clojure.lang.RestFn.applyTo(RestFn.java:132)
	at clojure.core$apply.invokeStatic(core.clj:669)
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003)
	at clojure.lang.RestFn.invoke(RestFn.java:397)
	at clojure.lang.AFn.run(AFn.java:22)
	at java.base/java.lang.Thread.run(Thread.java:833)
