2022-05-05 14:29:39,455{GMT}	INFO	[jepsen test runner] jepsen.core: Test version 6febe5a1f668e2662c4320709bf01696ca7cdd1d (plus uncommitted changes)
2022-05-05 14:29:39,455{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test --bin cent.py --workload txn-list-append --time-limit 2 --node-count 4
2022-05-05 14:29:39,537{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:remote #jepsen.control.SSHRemote{:session nil}
 :log-net-send false
 :node-count 4
 :max-txn-length 4
 :concurrency 4
 :db
 #object[maelstrom.db$db$reify__16747
         "0xcf0e8b4"
         "maelstrom.db$db$reify__16747@cf0e8b4"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "txn-list-append"
 :logging-json? false
 :net-journal #object[clojure.lang.Atom "0x51a7ee4e" {:status :ready, :val []}]
 :start-time
 #object[org.joda.time.DateTime "0x424c8ebe" "2022-05-05T14:29:39.000+01:00"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_adapter$reify__15560
         "0x7aafac17"
         "maelstrom.net$jepsen_adapter$reify__15560@7aafac17"]
 :client
 #object[maelstrom.workload.txn_list_append$client$reify__18442
         "0x3054551f"
         "maelstrom.workload.txn_list_append$client$reify__18442@3054551f"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0x6b8cfbeb"
         "java.util.concurrent.CyclicBarrier@6b8cfbeb"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 5
 :checker
 #object[jepsen.checker$compose$reify__8612
         "0x4603845b"
         "jepsen.checker$compose$reify__8612@4603845b"]
 :argv
 ("test"
  "--bin"
  "cent.py"
  "--workload"
  "txn-list-append"
  "--time-limit"
  "2"
  "--node-count"
  "4")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__17019@414b5798"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__17000@53251e03"]})
 :active-histories
 #object[clojure.lang.Atom "0x5ffae42f" {:status :ready, :val #{}}]
 :nodes ["n0" "n1" "n2" "n3"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "cent.py"
 :generator
 (jepsen.generator.TimeLimit
  {:limit 2000000000,
   :cutoff nil,
   :gen (jepsen.generator.Any
         {:gens [(jepsen.generator.OnThreads {:f #{:nemesis}, :gen nil})
                 (jepsen.generator.OnThreads
                  {:f #object[clojure.core$complement$fn__5654
                              "0x3eff5c32"
                              "clojure.core$complement$fn__5654@3eff5c32"],
                   :gen (jepsen.generator.Stagger
                         {:dt 400000000,
                          :next-time nil,
                          :gen ({:type :invoke, :f :txn, :value [[:append 7 1]]}
                                {:type :invoke,
                                 :f :txn,
                                 :value [[:r 9 nil] [:r 7 nil] [:r 9 nil]]}
                                {:type :invoke,
                                 :f :txn,
                                 :value [[:append 9 1]
                                         [:append 6 1]
                                         [:r 9 nil]
                                         [:append 9 2]]}
                                {:type :invoke,
                                 :f :txn,
                                 :value [[:r 7 nil] [:r 9 nil] [:r 9 nil]]}
                                {:type :invoke,
                                 :f :txn,
                                 :value [[:r 9 nil]
                                         [:append 9 3]
                                         [:r 8 nil]
                                         [:r 9 nil]]}
                                {:type :invoke,
                                 :f :txn,
                                 :value [[:r 9 nil] [:r 9 nil] [:r 8 nil]]}
                                {:type :invoke,
                                 :f :txn,
                                 :value [[:append 9 4] [:r 8 nil] [:append 9 5]]}
                                {:type :invoke,
                                 :f :txn,
                                 :value [[:r 9 nil] [:r 8 nil] [:append 9 6]]}
                                ...)})})]})})
 :log-net-recv false
 :os
 #object[jepsen.os$reify__2490 "0x48446968" "jepsen.os$reify__2490@48446968"]
 :time-limit 2
 :workload :txn-list-append
 :consistency-models [:strict-serializable]
 :topology :grid}

2022-05-05 14:29:39,544{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2022-05-05 14:29:39,546{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2022-05-05 14:29:39,547{GMT}	INFO	[jepsen node n2] maelstrom.db: Setting up n2
2022-05-05 14:29:39,547{GMT}	INFO	[jepsen node n1] maelstrom.db: Setting up n1
2022-05-05 14:29:39,547{GMT}	INFO	[jepsen node n3] maelstrom.db: Setting up n3
2022-05-05 14:29:39,548{GMT}	INFO	[jepsen node n3] maelstrom.process: launching cent.py nil
2022-05-05 14:29:39,548{GMT}	INFO	[jepsen node n2] maelstrom.process: launching cent.py nil
2022-05-05 14:29:39,548{GMT}	INFO	[jepsen node n1] maelstrom.process: launching cent.py nil
2022-05-05 14:29:39,550{GMT}	INFO	[jepsen node n0] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2022-05-05 14:29:39,567{GMT}	INFO	[jepsen node n0] maelstrom.db: Setting up n0
2022-05-05 14:29:39,568{GMT}	INFO	[jepsen node n0] maelstrom.process: launching cent.py nil
2022-05-05 14:29:49,570{GMT}	INFO	[jepsen node n0] maelstrom.db: Tearing down n0
2022-05-05 14:29:49,571{GMT}	INFO	[jepsen node n2] maelstrom.db: Tearing down n2
2022-05-05 14:29:49,571{GMT}	INFO	[jepsen node n1] maelstrom.db: Tearing down n1
2022-05-05 14:29:49,572{GMT}	INFO	[jepsen node n3] maelstrom.db: Tearing down n3
2022-05-05 14:29:50,567{GMT}	WARN	[main] jepsen.core: Test crashed!
clojure.lang.ExceptionInfo: Node n0 crashed with exit status 1. Before crashing, it wrote to STDOUT:



And to STDERR:

  File "/home/peter/Documents/tf/lab4/cent.py", line 41
    elif msg.body.type = 'txnReplication'
         ^^^^^^^^^^^^^
SyntaxError: cannot assign to attribute here. Maybe you meant '==' instead of '='?

Full STDERR logs are available in /home/peter/Documents/tf/lab4/store/txn-list-append/20220505T142939.000+0100/node-logs/n0.log
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.process$stop_node_BANG_.invokeStatic(process.clj:239)
	at maelstrom.process$stop_node_BANG_.invoke(process.clj:217)
	at maelstrom.db$db$reify__16747.teardown_BANG_(db.clj:75)
	at jepsen.db$fn__3285$G__3281__3289.invoke(db.clj:11)
	at jepsen.db$fn__3285$G__3280__3294.invoke(db.clj:11)
	at clojure.core$partial$fn__5824.invoke(core.clj:2625)
	at jepsen.control$on_nodes$fn__3165.invoke(control.clj:452)
	at clojure.lang.AFn.applyToHelper(AFn.java:154)
	at clojure.lang.AFn.applyTo(AFn.java:144)
	at clojure.core$apply.invokeStatic(core.clj:665)
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973)
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invokeStatic(core.clj:669)
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at dom_top.core$real_pmap_helper$build_thread__213$fn__214.invoke(core.clj:146)
	at clojure.lang.AFn.applyToHelper(AFn.java:152)
	at clojure.lang.AFn.applyTo(AFn.java:144)
	at clojure.core$apply.invokeStatic(core.clj:665)
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973)
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973)
	at clojure.lang.RestFn.invoke(RestFn.java:425)
	at clojure.lang.AFn.applyToHelper(AFn.java:156)
	at clojure.lang.RestFn.applyTo(RestFn.java:132)
	at clojure.core$apply.invokeStatic(core.clj:669)
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003)
	at clojure.lang.RestFn.invoke(RestFn.java:397)
	at clojure.lang.AFn.run(AFn.java:22)
	at java.base/java.lang.Thread.run(Thread.java:833)
