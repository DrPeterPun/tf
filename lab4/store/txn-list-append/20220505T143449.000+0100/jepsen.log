2022-05-05 14:34:49,125{GMT}	INFO	[jepsen test runner] jepsen.core: Test version 6febe5a1f668e2662c4320709bf01696ca7cdd1d (plus uncommitted changes)
2022-05-05 14:34:49,126{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test --bin cent.py --workload txn-list-append --time-limit 2 --node-count 4 --latency 500
2022-05-05 14:34:49,206{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:remote #jepsen.control.SSHRemote{:session nil}
 :log-net-send false
 :node-count 4
 :max-txn-length 4
 :concurrency 4
 :db
 #object[maelstrom.db$db$reify__16747
         "0xcf0e8b4"
         "maelstrom.db$db$reify__16747@cf0e8b4"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "txn-list-append"
 :logging-json? false
 :net-journal #object[clojure.lang.Atom "0x51a7ee4e" {:status :ready, :val []}]
 :start-time
 #object[org.joda.time.DateTime "0x424c8ebe" "2022-05-05T14:34:49.000+01:00"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_adapter$reify__15560
         "0x7aafac17"
         "maelstrom.net$jepsen_adapter$reify__15560@7aafac17"]
 :client
 #object[maelstrom.workload.txn_list_append$client$reify__18442
         "0x3054551f"
         "maelstrom.workload.txn_list_append$client$reify__18442@3054551f"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0x6b8cfbeb"
         "java.util.concurrent.CyclicBarrier@6b8cfbeb"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 5
 :checker
 #object[jepsen.checker$compose$reify__8612
         "0x4603845b"
         "jepsen.checker$compose$reify__8612@4603845b"]
 :argv
 ("test"
  "--bin"
  "cent.py"
  "--workload"
  "txn-list-append"
  "--time-limit"
  "2"
  "--node-count"
  "4"
  "--latency"
  "500")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__17019@414b5798"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__17000@53251e03"]})
 :active-histories
 #object[clojure.lang.Atom "0x5ffae42f" {:status :ready, :val #{}}]
 :nodes ["n0" "n1" "n2" "n3"]
 :test-count 1
 :latency {:mean 500, :dist :constant}
 :bin "cent.py"
 :generator
 (jepsen.generator.TimeLimit
  {:limit 2000000000,
   :cutoff nil,
   :gen (jepsen.generator.Any
         {:gens [(jepsen.generator.OnThreads {:f #{:nemesis}, :gen nil})
                 (jepsen.generator.OnThreads
                  {:f #object[clojure.core$complement$fn__5654
                              "0x3eff5c32"
                              "clojure.core$complement$fn__5654@3eff5c32"],
                   :gen (jepsen.generator.Stagger
                         {:dt 400000000,
                          :next-time nil,
                          :gen ({:type :invoke,
                                 :f :txn,
                                 :value [[:append 9 1] [:append 5 1] [:r 8 nil]]}
                                {:type :invoke,
                                 :f :txn,
                                 :value [[:append 9 2]
                                         [:r 7 nil]
                                         [:append 9 3]
                                         [:r 9 nil]]}
                                {:type :invoke,
                                 :f :txn,
                                 :value [[:r 9 nil]
                                         [:r 8 nil]
                                         [:r 8 nil]
                                         [:r 9 nil]]}
                                {:type :invoke,
                                 :f :txn,
                                 :value [[:r 7 nil] [:append 8 1]]}
                                {:type :invoke,
                                 :f :txn,
                                 :value [[:r 7 nil] [:r 9 nil]]}
                                {:type :invoke,
                                 :f :txn,
                                 :value [[:r 9 nil]
                                         [:r 9 nil]
                                         [:append 9 4]
                                         [:append 8 2]]}
                                {:type :invoke, :f :txn, :value [[:append 9 5]]}
                                {:type :invoke,
                                 :f :txn,
                                 :value [[:append 8 3] [:r 9 nil]]}
                                ...)})})]})})
 :log-net-recv false
 :os
 #object[jepsen.os$reify__2490 "0x1377af49" "jepsen.os$reify__2490@1377af49"]
 :time-limit 2
 :workload :txn-list-append
 :consistency-models [:strict-serializable]
 :topology :grid}

2022-05-05 14:34:49,214{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2022-05-05 14:34:49,216{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2022-05-05 14:34:49,217{GMT}	INFO	[jepsen node n1] maelstrom.db: Setting up n1
2022-05-05 14:34:49,217{GMT}	INFO	[jepsen node n2] maelstrom.db: Setting up n2
2022-05-05 14:34:49,217{GMT}	INFO	[jepsen node n3] maelstrom.db: Setting up n3
2022-05-05 14:34:49,217{GMT}	INFO	[jepsen node n1] maelstrom.process: launching cent.py nil
2022-05-05 14:34:49,217{GMT}	INFO	[jepsen node n2] maelstrom.process: launching cent.py nil
2022-05-05 14:34:49,217{GMT}	INFO	[jepsen node n3] maelstrom.process: launching cent.py nil
2022-05-05 14:34:49,219{GMT}	INFO	[jepsen node n0] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2022-05-05 14:34:49,224{GMT}	INFO	[jepsen node n0] maelstrom.db: Setting up n0
2022-05-05 14:34:49,224{GMT}	INFO	[jepsen node n0] maelstrom.process: launching cent.py nil
2022-05-05 14:34:49,306{GMT}	INFO	[jepsen test runner] jepsen.core: Relative time begins now
2022-05-05 14:34:49,314{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:txn	[[:append 9 1] [:append 5 1] [:r 8 nil]]
2022-05-05 14:34:49,452{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:txn	[[:append 9 2] [:r 7 nil] [:append 9 3] [:r 9 nil]]
2022-05-05 14:34:49,453{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:txn	[[:append 9 1] [:append 5 1] [:r 8 nil]]
2022-05-05 14:34:49,596{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:txn	[[:append 9 2] [:r 7 nil] [:append 9 3] [:r 9 [2 3]]]
2022-05-05 14:34:49,632{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:txn	[[:r 9 nil] [:r 8 nil] [:r 8 nil] [:r 9 nil]]
2022-05-05 14:34:49,747{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:txn	[[:r 7 nil] [:append 8 1]]
2022-05-05 14:34:49,764{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:txn	[[:r 7 nil] [:r 9 nil]]
2022-05-05 14:34:49,874{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:txn	[[:r 7 nil] [:append 8 1]]
2022-05-05 14:34:49,890{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:txn	[[:r 7 nil] [:r 9 nil]]
2022-05-05 14:34:50,153{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:txn	[[:r 9 nil] [:r 9 nil] [:append 9 4] [:append 8 2]]
2022-05-05 14:34:50,419{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:txn	[[:append 9 5]]
2022-05-05 14:34:50,454{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:txn	[[:append 8 3] [:r 9 nil]]
2022-05-05 14:34:54,633{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:info	:txn	[[:r 9 nil] [:r 8 nil] [:r 8 nil] [:r 9 nil]]	:net-timeout
2022-05-05 14:34:55,155{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:info	:txn	[[:r 9 nil] [:r 9 nil] [:append 9 4] [:append 8 2]]	:net-timeout
2022-05-05 14:34:55,420{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:info	:txn	[[:append 9 5]]	:net-timeout
2022-05-05 14:34:55,454{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:info	:txn	[[:append 8 3] [:r 9 nil]]	:net-timeout
2022-05-05 14:34:55,459{GMT}	INFO	[jepsen node n0] maelstrom.db: Tearing down n0
2022-05-05 14:34:55,459{GMT}	INFO	[jepsen node n1] maelstrom.db: Tearing down n1
2022-05-05 14:34:55,459{GMT}	INFO	[jepsen node n2] maelstrom.db: Tearing down n2
2022-05-05 14:34:55,459{GMT}	INFO	[jepsen node n3] maelstrom.db: Tearing down n3
2022-05-05 14:34:56,460{GMT}	INFO	[jepsen test runner] jepsen.core: Run complete, writing
2022-05-05 14:34:56,492{GMT}	INFO	[jepsen test runner] jepsen.core: Analyzing...
2022-05-05 14:34:56,692{GMT}	INFO	[jepsen test runner] jepsen.core: Analysis complete
2022-05-05 14:34:56,711{GMT}	INFO	[jepsen results] jepsen.store: Wrote /home/peter/Documents/tf/lab4/store/txn-list-append/20220505T143449.000+0100/results.edn
2022-05-05 14:34:56,736{GMT}	INFO	[jepsen test runner] jepsen.core: {:perf {:latency-graph {:valid? true},
        :rate-graph {:valid? true},
        :valid? true},
 :timeline {:valid? true},
 :exceptions {:valid? true},
 :stats {:valid? true,
         :count 8,
         :ok-count 4,
         :fail-count 0,
         :info-count 4,
         :by-f {:txn {:valid? true,
                      :count 8,
                      :ok-count 4,
                      :fail-count 0,
                      :info-count 4}}},
 :net {:stats {:all {:send-count 20,
                     :recv-count 20,
                     :msg-count 20,
                     :msgs-per-op 2.5},
               :clients {:send-count 20,
                         :recv-count 20,
                         :msg-count 20},
               :servers {:send-count 0,
                         :recv-count 0,
                         :msg-count 0,
                         :msgs-per-op 0.0}},
       :valid? true},
 :workload {:valid? false,
            :anomaly-types (:G-single-realtime),
            :anomalies {:G-single-realtime [{:cycle [{:type :ok,
                                                      :f :txn,
                                                      :value [[:r
                                                               7
                                                               nil]
                                                              [:r
                                                               9
                                                               nil]],
                                                      :time 585330758,
                                                      :process 2,
                                                      :index 8}
                                                     {:type :ok,
                                                      :f :txn,
                                                      :value [[:append
                                                               9
                                                               2]
                                                              [:r
                                                               7
                                                               nil]
                                                              [:append
                                                               9
                                                               3]
                                                              [:r
                                                               9
                                                               [2 3]]],
                                                      :time 291315203,
                                                      :process 1,
                                                      :index 3}
                                                     {:type :ok,
                                                      :f :txn,
                                                      :value [[:r
                                                               7
                                                               nil]
                                                              [:r
                                                               9
                                                               nil]],
                                                      :time 585330758,
                                                      :process 2,
                                                      :index 8}],
                                             :steps ({:type :rw,
                                                      :key 9,
                                                      :value :elle.list-append/init,
                                                      :value' 2,
                                                      :a-mop-index 1,
                                                      :b-mop-index 0}
                                                     {:type :realtime,
                                                      :a' {:type :ok,
                                                           :f :txn,
                                                           :value [[:append
                                                                    9
                                                                    2]
                                                                   [:r
                                                                    7
                                                                    nil]
                                                                   [:append
                                                                    9
                                                                    3]
                                                                   [:r
                                                                    9
                                                                    [2
                                                                     3]]],
                                                           :time 291315203,
                                                           :process 1,
                                                           :index 3},
                                                      :b {:type :invoke,
                                                          :f :txn,
                                                          :value [[:r
                                                                   7
                                                                   nil]
                                                                  [:r
                                                                   9
                                                                   nil]],
                                                          :time 457486815,
                                                          :process 2,
                                                          :index 6}}),
                                             :type :G-single-realtime}]},
            :not #{:strict-serializable},
            :also-not #{}},
 :valid? false}


Analysis invalid! (ﾉಥ益ಥ）ﾉ ┻━┻
